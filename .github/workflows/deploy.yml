name: Deploy AWS App

on:
  push:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Make gradlew Executable
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew test

  behavior-tests:
    needs: [ unit-tests ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        run: |
          mkdir -p $HOME/.aws
          echo "[default]" > $HOME/.aws/credentials
          echo "aws_access_key_id=test" >> $HOME/.aws/credentials
          echo "aws_secret_access_key=test" >> $HOME/.aws/credentials

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Make gradlew Executable
        run: chmod +x gradlew

      - name: Run Tests
        run: ./gradlew behaviorTest

  build:
    needs: [ behavior-tests ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Make gradlew Executable
        run: chmod +x gradlew

      - name: Build Gradle Project
        run: ./gradlew build -x test

      - name: Authenticate with ECR
        run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 644237782704.dkr.ecr.us-east-2.amazonaws.com

      - name: Build Docker Image
        run: docker build -t 644237782704.dkr.ecr.us-east-2.amazonaws.com/mikes_producao:latest .

      - name: Push Docker Image to ECR Registry
        run: docker push 644237782704.dkr.ecr.us-east-2.amazonaws.com/mikes_producao:latest

  sonar:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Make gradlew Executable
        run: chmod +x gradlew

      - name: Analyze with SonarCloud
        run: ./gradlew build sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    needs: [ sonar ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          cd infra/
          terraform init

      - name: Terraform Plan
        run: |
          cd infra/
          terraform plan

      - name: Terraform Apply
        run: |
          cd infra/
          terraform apply -auto-approve